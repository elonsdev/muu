{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextDescription","p","StyledButton","button","ResponsiveWrapper","StyledImg","img","StyledLink","App","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","subdomainLabel","setSubDomainLabel","randomImage","setRandomImage","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","interval","setInterval","r","Math","ceil","random","clearInterval","style","padding","backgroundColor","alt","src","className","sequence","wrapper","repeat","Infinity","textAlign","color","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","id","name","onChange","event","target","value","disabled","gasLimit","totalCostWei","String","totalGasLimit","mint","estimateGas","gasAmount","message","send","to","from","once","err","then","receipt","claimNFTs","fontSize","transform","width","href","length","substring","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"swBAAMA,EAAe,CACnBC,SAAS,EACTC,QAAS,KACTC,cAAe,KACfC,KAAM,KACNC,SAAU,IAkCGC,EA/BW,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAC1D,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFT,GADL,IAEEC,SAAS,IAEb,IAAK,qBACH,OAAO,2BACFM,GADL,IAEEN,SAAS,EACTC,QAASM,EAAOE,QAAQR,QACxBC,cAAeK,EAAOE,QAAQP,cAC9BC,KAAMI,EAAOE,QAAQN,OAEzB,IAAK,oBACH,OAAO,2BACFJ,GADL,IAEEC,SAAS,EACTI,SAAUG,EAAOE,UAErB,IAAK,iBACH,OAAO,2BACFH,GADL,IAEEL,QAASM,EAAOE,QAAQR,UAE5B,QACE,OAAOK,ICnCPP,EAAe,CACnBC,SAAS,EACTU,YAAa,EACbC,KAAM,EACNC,OAAO,EACPR,SAAU,IAiCGS,EA9BK,WAAmC,IAAlCP,EAAiC,uDAAzBP,EAAcQ,EAAW,uCACpD,OAAQA,EAAOC,MACb,IAAK,qBACH,OAAO,2BACFF,GADL,IAEEN,SAAS,EACTY,OAAO,EACPR,SAAU,KAEd,IAAK,qBACH,OAAO,2BACFE,GADL,IAEEN,SAAS,EACTU,YAAaH,EAAOE,QAAQC,YAE5BE,OAAO,EACPR,SAAU,KAEd,IAAK,oBACH,OAAO,2BACFL,GADL,IAEEC,SAAS,EACTY,OAAO,EACPR,SAAUG,EAAOE,UAErB,QACE,OAAOH,IC7BPQ,EAAcC,YAAgB,CAClCC,WAAYX,EACZY,KAAMJ,IAGFK,EAAa,CAACC,KACdC,EAAmBC,YAAQC,IAAe,WAAf,EAAmBJ,IAQrCK,EALNC,YAAYV,EAAaM,GCE5BK,EAAkB,SAAChB,GACvB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAIAiB,EAAY,WACvB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLD,EArBK,CACLnB,KAAM,uBAmBD,kBAGqBe,EACrBM,WACAb,WAAWd,cAAc4B,QAAQpB,cACjCqB,OANA,OAGCrB,EAHD,OAYHiB,EA1BG,CACLnB,KAAM,qBACNC,QAyBqB,CACfC,iBAdD,gDAmBHsB,QAAQC,IAAR,MACAN,EAASF,EAAgB,uCApBtB,yDAAP,uDCLIS,EAAgB,SAACzB,GACrB,MAAO,CACLD,KAAM,oBACNC,QAASA,IAwEA0B,EAAgB,SAAClC,GAC5B,8CAAO,WAAO0B,GAAP,SAAAC,EAAA,sDACLD,EArEK,CACLnB,KAAM,iBACNC,QAmE8B,CAAER,QAASA,KACzC0B,EAASD,KAFJ,2CAAP,uD,QC5FWU,EAASC,IAAOC,IAAV,yOAEG,gBAAGC,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAUnDC,EAAeH,IAAOC,IAAV,2DAMZG,EAAcJ,IAAOC,IAAV,6DAMXI,EAAeL,IAAOC,IAAV,6DAMZK,EAAcN,IAAOC,IAAV,6DAMXM,EAAYP,IAAOC,IAAV,iQAEZ,gBAAGO,EAAH,EAAGA,KAAH,OAAeA,GAAc,KACnB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,YACtB,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAC3B,gBAAGC,EAAH,EAAGA,GAAH,OAAaA,GAAU,gBAClB,qBAAGC,KAAmB,OAAS,UAE/B,gBAAGV,EAAH,EAAGA,MAAH,OAAgBA,EAAK,cAAUA,EAAV,KAAqB,UAkBnDW,IAbYb,IAAOc,EAAV,yHAOMd,IAAOc,EAAV,oGAMMd,IAAOc,EAAV,qG,IAMGd,IAAOC,IAAV,iE,gBC5Dfc,GAAef,IAAOgB,OAAV,+iBA8CZC,IAzBoBjB,IAAOgB,OAAV,inBAyBGhB,IAAOC,IAAV,8NAqBjBiB,IATalB,IAAOmB,IAAV,2JASEnB,IAAOmB,IAAV,wLAWTC,GAAapB,IAAOT,EAAV,kFA6SR8B,OAxSf,WACE,IAvFgBC,EAAOC,EAuFjBjC,EAAWkC,cACX7C,EAAa8C,aAAY,SAACxD,GAAD,OAAWA,EAAMU,cAEhD,GADa8C,aAAY,SAACxD,GAAD,OAAWA,EAAMW,QACJ8C,oBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAgCF,mBAAS,2BAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KACA,GADA,KAC4CL,mBAAS,KAArD,mBAAOM,EAAP,KAAuBC,EAAvB,KACA,EAAsCP,mBAAS,wBAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAA6BT,mBAAS,CACpCU,iBAAkB,GAClBC,UAAW,GACXC,QAAS,CACPC,KAAM,GACNC,OAAQ,GACRC,GAAI,GAENC,SAAU,GACVF,OAAQ,GACRG,WAAY,EACZC,SAAU,EACVC,aAAc,EACdC,UAAW,EACXC,YAAa,GACbC,iBAAkB,GAClBC,iBAAiB,IAhBnB,mBAAOC,EAAP,KAAeC,EAAf,KA+EMC,EAAU,WACa,KAAvBzE,EAAWf,SAA+C,OAA7Be,EAAWd,eAC1CyB,EAASD,EAAUV,EAAWf,WAI5ByF,EAAS,uCAAG,8BAAA9D,EAAA,sEACa+D,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAJI,cACVC,EADU,gBAOKA,EAAeC,OAPpB,OAOVC,EAPU,OAQhBR,EAAWQ,GARK,2CAAH,qDAuCf,OA5BAC,qBAAU,WACRP,MACC,IAEHO,qBAAU,WACRR,MACC,CAACzE,EAAWf,UAYfgG,qBAAU,WACR,IAAMC,EAAWC,aAAY,WAC3B,IAAIC,EAAKC,KAAKC,KAAsB,GAAhBD,KAAKE,UAEzB/B,EADc,kBAAmB4B,EAAI,UAEpC,MAEH,OAAO,kBAAMI,cAAcN,MAC1B,IAGD,eAAC,EAAD,UACE,gBAAC,EAAD,CACErD,KAAM,EACNG,GAAI,SACJyD,MAAO,CAAEC,QAAS,GAAIC,gBAAiB,kBAHzC,UAME,eAAC,EAAD,IACA,gBAACrD,GAAD,CAAmBT,KAAM,EAAG4D,MAAO,CAAEC,QAAS,IAAMzD,MAAI,EAAxD,UACE,eAAC,EAAD,CAAaJ,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,eAACO,GAAD,CAAWqD,IAAK,UAAWC,IAAKtC,MAElC,eAAC,EAAD,IACA,gBAAC,EAAD,CACE1B,KAAM,EACNE,GAAI,SACJC,GAAI,SACJyD,MAAO,CAELC,QAAS,IANb,UAWE,eAAC,EAAD,IAEE,qCAE0B,KAAvB1F,EAAWf,SACiB,OAA7Be,EAAWd,cACT,gBAAC,EAAD,CAAa8C,GAAI,SAAUD,GAAI,SAA/B,UACE,sBAAI+D,UAAU,UAAd,UACE,eAAC,KAAD,CACEC,SAAU,CAAC,UAAW,IAAM,MAAO,IAAM,eAAM,IAAM,OAAQ,IAAM,QAAS,IAAM,eAAM,IAAM,OAAQ,IAAM,OAAQ,IAAM,KAAM,IAAM,KAAM,IAAM,eAAM,IAAM,OAAQ,IAAM,QAAS,IAAM,MAAO,KAElMC,QAAQ,OACRC,OAAQC,MALZ,cASA,wBACA,eAAC,GAAD,CACET,MAAO,CACLU,UAAW,SACXC,MAAO,SAHX,2CAQA,eAAC,EAAD,IACA,eAAChE,GAAD,CACEiE,QAAS,SAACC,GACRA,EAAEC,iBACF5F,EFvPtB,uCAAO,WAAOA,GAAP,+BAAAC,EAAA,6DACLD,EA5BK,CACLnB,KAAM,uBA0BD,SAEqBmF,MAAM,mBAAoB,CAClDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBALP,cAEC2B,EAFD,gBAQaA,EAAYzB,OARzB,cAQC0B,EARD,gBASwB9B,MAAM,sBAAuB,CACxDC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAZP,cASCC,EATD,iBAegBA,EAAeC,OAf/B,WAeCR,EAfD,SAgBgBmC,SAAbC,EAhBH,EAgBGA,YACgCA,EAASC,WAjB5C,wBAmBHC,IAAgBC,YAAYH,GACxBxH,EAAO,IAAI4H,IAAKJ,GApBjB,oBAsBsBA,EAASK,QAAQ,CACtCC,OAAQ,wBAvBT,eAsBKC,EAtBL,iBAyBuBP,EAASK,QAAQ,CACvCC,OAAQ,gBA1BT,gBA4BgB1C,EAAOZ,QAAQG,IACxBqD,EAAmB,IAAIN,IAC3BJ,EACAlC,EAAOd,kBAET9C,EAtDD,CACLnB,KAAM,qBACNC,QAqDuB,CACbR,QAASiI,EAAS,GAClBhI,cAAeiI,EACfhI,KAAMA,KAIVwH,EAASS,GAAG,mBAAmB,SAACF,GAC9BvG,EAASQ,EAAc+F,EAAS,QAElCP,EAASS,GAAG,gBAAgB,WAC1BV,OAAOW,SAASC,aAIlB3G,EAASO,EAAc,qBAAD,OAAsBqD,EAAOZ,QAAQC,KAArC,OAjDvB,mDAoDDjD,EAASO,EAAc,0BApDtB,gCAuDHP,EAASO,EAAc,sBAvDpB,2DAAP,uDEwPsBuD,KAJJ,qBASyB,KAAxBzE,EAAWZ,SACV,uCACE,eAAC,EAAD,IACA,eAAC,GAAD,CACEqG,MAAO,CACLU,UAAW,SACXC,MAAO,sBAHX,SAMGpG,EAAWZ,cAGd,QAGN,uCAEI,eAAC,EAAD,IAEA,eAAC,EAAD,IAGF,eAAC,GAAD,CACEqG,MAAO,CACLU,UAAW,SACXC,MAAO,SAHX,SAMGlD,IAEH,eAAC,EAAD,IACA,iCACE,wBACE4C,UAAU,yBACVtG,KAAK,OACL+H,GAAG,UACHC,KAAK,UACLC,SAjHE,SAAAC,GACtBpE,EAAkBoE,EAAMC,OAAOC,OAE/B5G,QAAQC,IAAI,YAAayG,EAAMC,OAAOC,QA+GlBA,MAAOvE,IAPX,cAYA,eAAC,EAAD,IACA,eAAC,EAAD,CAAarB,GAAI,SAAUD,GAAI,SAAUD,GAAI,MAA7C,SACE,eAACM,GAAD,CACEyF,SAAU7E,EAAc,EAAI,EAC5BqD,QAAS,SAACC,GACRA,EAAEC,iBArNR,WAChB,IAAI5G,EAAO4E,EAAON,SACd6D,EAAWvD,EAAOJ,UAClB4D,EAAeC,OAAOrI,EAAOyD,GAC7B6E,EAAgBD,OAAOF,EAAW1E,GACtCpC,QAAQC,IAAI,SAAU8G,GACtB/G,QAAQC,IAAI,cAAegH,GAC3B9E,EAAY,WAAD,OAAYE,EAAZ,gBACXJ,GAAe,GAEfjD,EAAWd,cAAc4B,QAAQoH,KAAK7E,GAAgB8E,YAAY,CAACL,SAAU,IAAOF,MAAO,OAAmB,SAAShI,EAAOwI,GACpG,KAArBxI,EAAMyI,QAAQ,KACflF,EAAY,+CACZF,GAAe,IAEfjD,EAAWd,cAAc4B,QACxBoH,KAAK7E,GAELiF,KAAK,CACJC,GAAIhE,EAAOd,iBACX+E,KAAMxI,EAAWf,QACjB2I,MAAOG,EACPD,SAAU,MAGXW,KAAK,SAAS,SAACC,GACd1H,QAAQC,IAAIyH,GACZvF,EAAY,uDACZF,GAAe,MAEhB0F,MAAK,SAACC,GACL5H,QAAQC,IAAI2H,GACZzF,EAAY,eAAD,OACME,EADN,uDAGXJ,GAAe,GACftC,EAASD,EAAUV,EAAWf,gBAkLd4J,GACApE,KALJ,SAQGzB,EAAc,kBAAoB,4BAGvC,wBAEA,gBAAC,GAAD,CACIyC,MAAO,CAAEU,UAAW,SAAUC,MAAO,SADzC,UAIE,wBAAOX,MAAO,CAACqD,SAAU,WAAzB,oFACA,wBACA,wBAAOrD,MAAO,CAACqD,SAAU,OAAzB,8HAMV,eAAC,EAAD,OAEF,eAAC,EAAD,IACA,eAAC,EAAD,CAAajH,KAAM,EAAGE,GAAI,SAAUC,GAAI,SAAxC,SACE,eAACO,GAAD,CACEqD,IAAK,UACLC,IAAKtC,EACLkC,MAAO,CAAEsD,UAAW,qBAI1B,eAAC,EAAD,IACA,gBAAC,EAAD,CAAahH,GAAI,SAAUC,GAAI,SAAUyD,MAAO,CAAEuD,MAAO,OAAzD,UACE,gBAAC,GAAD,CACEvD,MAAO,CACLU,UAAW,SACXC,MAAO,uBAHX,+EAMoE,oBAAG6C,KAAK,+BAAR,sBANpE,mIAMuP,oBAAGA,KAAK,8BAAR,sBANvP,kCAMwU,oBAAGA,KAAK,gCAAR,kCANxU,uEAOE,wBAAK,wBAAOxD,MAAO,CAACqD,SAAU,OAAzB,8HAEP,eAAC,EAAD,IAVF,mBAYkB,eAACrG,GAAD,CAAYkF,OAAQ,SAAUsB,KAAM1E,EAAOb,UAA3C,UArXRf,EAsXQ4B,EAAOd,iBAtXRb,EAsX0B,GArXjDD,EAAMuG,OAAStG,EAAf,UAAwBD,EAAMwG,UAAU,EAAGvG,GAA3C,OAAuDD,cCG1CyG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCCdO,IAASC,OACP,eAAC,IAAD,CAAUtJ,MAAOA,EAAjB,SACE,eAAC,GAAD,MAEFuJ,SAASC,eAAe,SAM1BX,O","file":"static/js/main.cc47ca25.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        // cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      // let cost = await store\n      //   .getState()\n      //   .blockchain.smartContract.methods.cost()\n      //   .call();\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          // cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\nimport { TypeAnimation } from 'react-type-animation';\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 10px;\n  border: 1px black solid;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 200px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n  font-family: 'Kalam';\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`Mint your .muu.eth now!`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [subdomainLabel, setSubDomainLabel] = useState('');\n  const [randomImage, setRandomImage] = useState('/config/images/2.png')\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`Minting ${subdomainLabel}.muu.eth...`);\n    setClaimingNft(true);\n\n    blockchain.smartContract.methods.mint(subdomainLabel).estimateGas({gasLimit: 300000,value: 5000000000000000}, function(error, gasAmount){\n      if(error.message[18] == \":\") {\n        setFeedback(\"Someone has already registered this domain.\");\n        setClaimingNft(false);\n      } else {\n        blockchain.smartContract.methods\n        .mint(subdomainLabel)\n        \n        .send({\n          to: CONFIG.CONTRACT_ADDRESS,\n          from: blockchain.account,\n          value: totalCostWei,\n          gasLimit: 300000,\n        })\n        \n        .once(\"error\", (err) => {\n          console.log(err);\n          setFeedback(\"Sorry, something went wrong please try again later.\");\n          setClaimingNft(false);\n        })\n        .then((receipt) => {\n          console.log(receipt);\n          setFeedback(\n            `Aaaah yeah, ${subdomainLabel}.muu.eth is yours! go visit Opensea.io to view it.`\n          );\n          setClaimingNft(false);\n          dispatch(fetchData(blockchain.account));\n        }); \n      }\n          \n    });\n    \n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 10) {\n      newMintAmount = 10;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  const listenToEvent = () => {\n    const contract = new ethers.Contract(\"\", erc)\n  }\n\n  const handleChangeSub = event => {\n    setSubDomainLabel(event.target.value);\n\n    console.log('calue is.', event.target.value)\n  }\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      let r = (Math.ceil((Math.random() * 30)));\n      let randomI = \"/config/images/\"+ r + \".png\";\n      setRandomImage(randomI)\n    }, 2500);\n  \n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, [])\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n      > \n        \n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={randomImage} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n\n              padding: 24,\n\n            }}\n          >\n            \n            <s.SpacerSmall />\n  \n              <>\n                \n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <h1 className=\"muulogo\">\n                      <TypeAnimation\n                        sequence={['vitalik', 2000, '420', 2000, '😋', 2000, 'mike', 2000, 'trade', 2000, '🤌', 2000, 'fomo', 2000, 'king', 2000, 'my', 2000, '88', 2000, '💀', 2000, 'elon', 2000, 'grail', 2000, 'guy', 2000]}\n                                      //  Replacing previous Text\n                        wrapper=\"span\"\n                        repeat={Infinity}\n                      />\n                      .muu.eth\n                    </h1>\n                    <br/>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"black\",\n                      }}\n                    >\n                      Connect to mint your .muu.eth\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      CONNECT\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                      \n                      <s.SpacerXSmall />\n                      \n                      <s.SpacerSmall />\n                    \n                    \n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"black\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <div >\n                      <input\n                        className=\"inputsub doodle-border\"\n                        type=\"text\"\n                        id=\"message\"\n                        name=\"message\"\n                        onChange={handleChangeSub}\n                        value={subdomainLabel}\n                      />.muu.eth\n                    </div>\n                    \n                    \n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"Busy minting...\" : \"Costs 0.005 ETH + gas\"}\n                      </StyledButton>\n                    </s.Container>\n                    <br/>\n                   \n                    <s.TextDescription\n                        style={{ textAlign: \"center\", color: \"black\" }}\n                      >\n                        \n                      <small style={{fontSize: \"smaller\"}}>There are no yearly renewal fee on .muu.eth subdomains*!! 😃</small>\n                      <br/>\n                      <small style={{fontSize: \"6px\"}}>*...As long as this service makes enough ETH per year to keep up registration fees on muu.eth ($640/yr).</small>\n                      </s.TextDescription>\n                  </>\n                )}\n              </>\n            \n            <s.SpacerMedium />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={randomImage}\n              style={{ transform: \"scaleX(-1)\" }}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            Wondering wtf this is all about? muu.eth is a experimental NFT by <a href=\"https://twitter.com/elonsdev\">ElonsDev</a> that uses the muu.eth ENS name to issue subdomains that are also ERC721 tokens with a randomly generated face from croodles by <a href=\"https://twitter.com/realvjy\">@realvjy</a> (under CC BY 4.0 License) and <a href=\"https://avatars.dicebear.com/\">avatars.dicebear.com</a> free api*. Thus it can generate new and unique...ish faces forever.\n            <br/><small style={{fontSize: \"6px\"}}>*...Hopefully the API doesn't break or I will have to remake it to keep the NFT images up. FAQ coming soon...</small>\n          </s.TextDescription>\n          <s.SpacerSmall />\n          \n          Smart Contract: <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}